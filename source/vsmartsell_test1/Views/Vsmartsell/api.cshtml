@{
    ViewBag.Title = "Analytics";
    ViewBag.gaviewid = "105411908";
}
<style>
    #auth-button {
        background-color: #e8e8e8 !important;
        padding-top: 0px;
        padding-bottom: 10px;
    }

    .colorinformation {
        color: blue;
    }

    a:hover {
        color: blue;
        text-decoration: underline;
    }
</style>
<!DOCTYPE html>
<html>
<head>
    <title>Embed API Demo</title>
    @*<link rel="stylesheet" href="~/Content/bootstrap.min.css">*@
    <!--tracking code-->
    <script>
        function secondsToHms(d) {
            d = Number(d);
            var h = Math.floor(d / 3600);
            var m = Math.floor(d % 3600 / 60);
            var s = Math.floor(d % 3600 % 60);
            return ((h > 0 ? h + ":" + (m < 10 ? "0" : "") : "") + m + ":" + (s < 10 ? "0" : "") + s);
        }
        //(function (i, s, o, g, r, a, m) {
        //    i['GoogleAnalyticsObject'] = r; i[r] = i[r] || function () {
        //        (i[r].q = i[r].q || []).push(arguments)
        //    }, i[r].l = 1 * new Date(); a = s.createElement(o),
        //    m = s.getElementsByTagName(o)[0]; a.async = 1; a.src = g; m.parentNode.insertBefore(a, m)
        //})(window, document, 'script', '//www.google-analytics.com/analytics.js', 'ga');

        //ga('create', 'UA-65273366-1', 'auto');
        //ga('send', 'pageview');
    </script>
</head>
<body>

    <!-- Step 1: Create the containing elements. -->
    <div class="container">
        <h4 class="col-md-12">Thông tin sử dụng phần mềm</h4>
        <div class="col-md-3" id="active-users-container"></div>
        <div class="col-md-9">
            <a data-toggle="modal" class="colorinformation" data-target="#eventsModal">Activities in last 3 days</a>
        </div>

        <div class="col-md-3">Users today : <span id="today"></span> </div>
        <div class="col-md-3">Users in last 7 days : <span id="7days"></span> </div>
        <div class="col-md-3">Users in last 30 days : <span id="30days"></span> </div>
        <div class="col-md-3">
            <a data-toggle="modal" class="colorinformation" data-target="#userModal">Chi tiết</a>
        </div>

        <div class="col-md-3">Most viewed in last 30 days : </div>
        <div class="col-md-3"> <span id="pagepath"></span> </div>
        <div class="col-md-3">Viewed : <span id="pageviews"></span> </div>
        <div class="col-md-3">
            <a data-toggle="modal" class="colorinformation" data-target="#pageviewsModal">Chi tiết</a>
        </div>

        <div class="col-md-3">Transactions in last 30 days : <span id="transactions"></span> </div>
        <div class="col-md-6">Revenue : <span id="revenue"></span> VND </div>
        <div class="col-md-3">
            <a data-toggle="modal" class="colorinformation" data-target="#transactionModal">Chi tiết</a>
        </div>
    </div>

    <div class="modal fade" id="userModal" role="dialog">
        <div class="modal-dialog modal-lg" style="width:910px;">
            <div class="modal-content" style="width:910px;">
                <div class="modal-header">
                    <div id="dateRange1"></div>
                    @*<button type="button" class="close" data-dismiss="modal">&times;</button>*@
                </div>
                <div class="modal-body" style="padding: 0px;">
                    <div class="container" style="padding:1px;width:inherit">
                        <div class="col-md-6" style="padding:0px;">
                            <span id="numberuser"></span>
                        </div>
                        <div class="col-md-6" style="padding: 3px; max-height: 400px; overflow-y: scroll;">
                            <span id="username"></span>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="modal fade" id="pageviewsModal" role="dialog">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <div id="dateRange2"></div>
                </div>
                <div class="modal-body" style="max-height: 400px; overflow-y: scroll; padding-left: 0px; padding-right: 0px;">
                    <div class="container" style="width:inherit">
                        <table class="table table-bordered table-striped table-hover" id="pageviewstable">
                            <tr>
                                <th>Page</th>
                                <th>PageViews</th>
                                <th style="text-align:right">TimeOnPage</th>
                            </tr>
                            <tbody id="pageviewsdata"></tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="modal fade" id="transactionModal" role="dialog">
        <div class="modal-dialog" style="width:480px;">
            <div class="modal-content">
                <div class="modal-header">
                    <div id="dateRange3"></div>
                </div>
                <div class="modal-body" style="max-height: 400px; overflow-y: scroll;">
                    <div class="container" style="width:inherit">
                        <span id="transactionstable"></span>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="modal fade" id="eventsModal" role="dialog">
        <div class="modal-dialog" style="width:480px;">
            <div class="modal-content">
                <div class="modal-header">
                </div>
                <div class="modal-body" style="max-height: 400px; overflow-y: scroll; padding:10px;">
                    <div class="container" style="width:inherit; padding:0;">
                        <span id="eventstable"></span>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <br />

    @*Users in last 30 days : <span id="30days"></span> <br />
        Users in last 7 days : <span id="7days"></span> <br />
        Users today : <span id="today"></span> <br />
        <span id="active-users-container"></span>*@
    @*Most viewed in last 30 days : <span id="pagepath"></span> --- <span id="pageviews"></span> views.
        <section id="money"></section>
        <section id="pageviewstable"></section>
        <section id="view-selector"></section>
        <section id="timeline"></section>*@
    <div class="col-md-12" style="padding:0 0 0 0">
        <section id="auth-button" style="background-color:#ffffff"></section>
    </div>
    <!-- Step 2: Load the library. -->

    <script>
        (function (w, d, s, g, js, fjs) {
            g = w.gapi || (w.gapi = {}); g.analytics = { q: [], ready: function (cb) { this.q.push(cb) } };
            js = d.createElement(s); fjs = d.getElementsByTagName(s)[0];
            js.src = 'https://apis.google.com/js/platform.js';
            fjs.parentNode.insertBefore(js, fjs); js.onload = function () { g.load('analytics') };
        }(window, document, 'script'));
    </script>

    <script src="~/Scripts/date-range-selector.js"></script>
    <script src="https://ga-dev-tools.appspot.com/public/javascript/embed-api/components/active-users.js"></script>

    <script>
        gapi.analytics.ready(function () {

            // Step 3: Authorize the user.

            var CLIENT_ID = '668445380644-9vud4di1lm4gdonocgtskdpvkqtet74l.apps.googleusercontent.com';

            gapi.analytics.auth.authorize({
                container: 'auth-button',
                clientid: CLIENT_ID,
            });

            // Step 4: Create the view selector.

            var viewSelector = new gapi.analytics.ViewSelector({
                container: 'view-selector'
            });

            /**
            * Create a new ActiveUsers instance to be rendered inside of an
            * element with the id "active-users-container" and poll for changes every
            * five seconds.
            */
            var activeUsers = new gapi.analytics.ext.ActiveUsers({
                container: 'active-users-container',
                pollingInterval: 5
            });
            //Add CSS animation to visually show the when users come and go.
            activeUsers.once('success', function () {
                var element = this.container.firstChild;
                var timeout;

                this.on('change', function (data) {
                    var element = this.container.firstChild;
                    var animationClass = data.delta > 0 ? 'is-increasing' : 'is-decreasing';
                    element.className += (' ' + animationClass);

                    clearTimeout(timeout);
                    timeout = setTimeout(function () {
                        element.className =
                            element.className.replace(/ is-(increasing|decreasing)/g, '');
                    }, 3000);
                });
            });
            activeUsers.set({ 'ids': 'ga:@ViewBag.gaviewid' }).execute();

            // Step 5: Create the report.
            //get users data
            var users = new gapi.analytics.report.Data({
                query: {
                    'ids': 'ga:@ViewBag.gaviewid',
                    'dimensions': 'ga:date',
                    'metrics': 'ga:users',
                    'start-date': '30daysAgo',
                    'end-date': 'today',
                }
            });
            users.on('success', function (result) {
                var ary = result.rows;
                var _30days = 0;
                var _7days = 0;
                var _today = 0;
                for (i = 0; i < 31; i++) {
                    _30days += Number(ary[i][1]); // i = date index, 1 = get number of users
                }
                for (i = 23; i < 31; i++) {
                    _7days += Number(ary[i][1]);
                }
                _today = ary[30][1];
                $("#30days").text(_30days);
                $("#7days").text(_7days);
                $("#today").text(_today);
            }).execute();

            //draw users chart
            var dateRange1 = {
                'start-date': '30daysAgo',
                'end-date': 'today'
            };
            var dateRangeSelector1 = new gapi.analytics.ext.DateRangeSelector({
                container: 'dateRange1'
            }).set(dateRange1).execute();

            var timeline = new gapi.analytics.googleCharts.DataChart({
                reportType: 'ga',
                query: {
                    'ids': 'ga:@ViewBag.gaviewid',
                    'dimensions': 'ga:date',
                    'metrics': 'ga:users',
                },
                chart: {
                    type: 'LINE',
                    container: 'numberuser'
                }
            });
            timeline.set({ query: dateRange1 }).execute();

            //draw username and date table
            var usernametable = new gapi.analytics.googleCharts.DataChart({
                reportType: 'ga',
                query: {
                    'ids': 'ga:@ViewBag.gaviewid',
                    'metrics': 'ga:sessions',
                    'dimensions': 'ga:dimension2,ga:date',
                },
                chart: {
                    type: 'TABLE',
                    container: 'username'
                }
            });
            usernametable.set({ query: dateRange1 }).execute();

            //get pageviews data
            var pageviews = new gapi.analytics.report.Data({
                query: {
                    'ids': 'ga:@ViewBag.gaviewid',
                    'dimensions': 'ga:pagePath',
                    'metrics': 'ga:pageviews',
                    'start-date': '30daysAgo',
                    'end-date': 'today',
                    filters: 'ga:pagePath!=/'
                }
            });
            pageviews.on('success', function (result) {
                var ary = result.rows;
                var leng = ary.length;
                var max = 0;
                for (i = 1; i < leng; i++) {
                    if (Number(ary[max][1]) < Number(ary[i][1])) {
                        max = i;
                    }
                }
                $("#pagepath").text(ary[max][0]);
                $("#pageviews").text(ary[max][1]);
            }).execute();

            //draw pageviews table
            var dateRange2 = {
                'start-date': '30daysAgo',
                'end-date': 'today'
            };
            var dateRangeSelector2 = new gapi.analytics.ext.DateRangeSelector({
                container: 'dateRange2'
            }).set(dateRange2).execute();

            //var page = new gapi.analytics.googleCharts.DataChart({
            var page = new gapi.analytics.report.Data({
                //reportType: 'ga',
                query: {
                    'ids': 'ga:@ViewBag.gaviewid',
                    'dimensions': 'ga:pagePath',
                    'metrics': 'ga:pageviews,ga:timeOnPage',
                },
                //chart: {
                //    type: 'TABLE',
                //    container: 'pageviewstable'
                //}
            });
            //page.on('success', function (response) {
            //    response.data;
            //});
            page.set({ query: dateRange2 }).on('success', function (result) {
                $('#pageviewsdata').children().remove();
                var ary = result.rows;
                for (i in ary) {
                    $('#pageviewsdata').append("<tr><td>" + ary[i][0] + "</td><td>" + ary[i][1] + "</td><td style='text-align:right'>" + secondsToHms(ary[i][2]) + "</td></tr>");
                }
            }).execute();

            //get transaction data
            var money = new gapi.analytics.report.Data({
                reportType: 'ga',
                query: {
                    'ids': 'ga:@ViewBag.gaviewid',
                    'metrics': 'ga:transactions,ga:transactionRevenue',
                    'start-date': '30daysAgo',
                    'end-date': 'today',
                }
            });
            money.on('success', function (result) {
                var ary = result.rows;
                $("#transactions").text(ary[0][0]);
                $("#revenue").text(ary[0][1].slice(0, -2));
            }).execute();

            //draw transactions table
            var dateRange3 = {
                'start-date': '30daysAgo',
                'end-date': 'today'
            };
            var dateRangeSelector3 = new gapi.analytics.ext.DateRangeSelector({
                container: 'dateRange3'
            }).set(dateRange3).execute();
            var transactionstable = new gapi.analytics.googleCharts.DataChart({
                reportType: 'ga',
                query: {
                    'ids': 'ga:@ViewBag.gaviewid',
                    'metrics': 'ga:transactions,ga:transactionRevenue',
                    'dimensions': 'ga:date',
                    filters: 'ga:transactions!=0'
                },
                chart: {
                    type: 'TABLE',
                    container: 'transactionstable'
                }
            });
            transactionstable.set({ query: dateRange3 }).execute();

            //draw events table
            var events = new gapi.analytics.googleCharts.DataChart({
                reportType: 'ga',
                query: {
                    'ids': 'ga:@ViewBag.gaviewid',
                    'metrics': 'ga:totalEvents',
                    'dimensions': 'ga:eventCategory,ga:eventLabel',
                    'start-date': '3daysAgo',
                    'end-date': 'today',
                    filters: 'ga:hostname=~localhost'
                },
                chart: {
                    type: 'TABLE',
                    container: 'eventstable'
                }
            });
            events.execute();

            // Register a handler to run whenever the user changes the date range from
            // the second datepicker. The handler will update the second dataChart
            // instance as well as change the dashboard subtitle to reflect the range.
            dateRangeSelector1.on('change', function (data) {
                timeline.set({ query: data }).execute();
                usernametable.set({ query: data }).execute();
                // Update the "to" dates text.
                var datefield = document.getElementById('to-dates');
                datefield.innerHTML = data['start-date'] + '&mdash;' + data['end-date'];
            });
            dateRangeSelector2.on('change', function (data) {
                page.set({ query: data }).execute();
                // Update the "to" dates text.
                var datefield = document.getElementById('to-dates');
                datefield.innerHTML = data['start-date'] + '&mdash;' + data['end-date'];
            });
            dateRangeSelector3.on('change', function (data) {
                transactionstable.set({ query: data }).execute();
                // Update the "to" dates text.
                var datefield = document.getElementById('to-dates');
                datefield.innerHTML = data['start-date'] + '&mdash;' + data['end-date'];
            });

            // Step 6: Hook up the components to work together.

            //gapi.analytics.auth.on('success', function (response) {
            //viewSelector.execute();
            //});

        });
    </script>

</body>
</html>
